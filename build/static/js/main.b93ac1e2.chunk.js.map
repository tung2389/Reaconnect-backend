{"version":3,"sources":["redux/actions/userActions.js","components/LoginForm/index.js","redux/types.js","pages/Login/login.js","components/SignupForm/index.js","pages/Signup/signup.js","components/PostWriter/snackBar.js","components/PostEditor/postOptions.js","components/PostEditor/index.js","redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","components/PostWriter/index.js","redux/actions/dataActions.js","components/Options/index.js","redux/actions/uiActions.js","components/Navbar/appBar.js","config/sideNav.js","components/Navbar/sideNav.js","components/Navbar/index.js","components/Comment/index.js","redux/actions/commentActions.js","components/CommentWriter/index.js","redux/actions/likeActions.js","components/Post/index.js","pages/Dashboard/dashboard.js","components/ProfileEditor/index.js","pages/Profile/profile.js","pages/Verify/verify.js","util/AuthRoute.js","App.js","serviceWorker.js","index.js"],"names":["saveAuthorizationHeader","token","JWTToken","localStorage","setItem","axios","defaults","headers","common","saveUser","user","JSON","stringify","LoginForm","props","state","email","password","handleKeyChange","bind","handleLogin","e","this","setState","target","name","value","userData","login","history","classes","UI","loading","errors","Paper","className","form","elevation","forwardIcon","TextField","onChange","label","helperText","error","input","disabled","type","general","Typography","variant","generalError","Button","color","button","onClick","CircularProgress","size","signup","push","React","Component","mapActionsToProps","dispatch","post","then","res","data","jwtToken","payload","catch","err","response","connect","withStyles","Login","src","SignupForm","username","confirmPassword","handleSignup","message","personAddIcon","Signup","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","display","alignItems","MySnackbarContentWrapper","onClose","other","Icon","SnackbarContent","clsx","aria-describedby","id","action","IconButton","key","aria-label","SnackBar","open","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","PostOptions","openMenu","anchorEl","currentTarget","closeMenu","Menu","Boolean","MenuItem","PostEditor","handleChange","postContent","closeDialog","handleUpload","mode","Dialog","dialog","DialogTitle","postHeader","subHeader","Avatar","avatar","parse","toUpperCase","DialogContent","fieldContainer","autoFocus","postField","margin","placeholder","multiline","rows","rowsMax","DialogActions","width","height","initialState","authenticated","intialState","posts","sideNavOpen","middleware","thunk","enhancer","applyMiddleware","reducers","combineReducers","store","createStore","PostWriter","openDialog","closeSnackBar","snackBarOpen","newPost","content","uploadPost","nextProps","ButtonBase","container","placeHolder","transition","Options","toggleMenu","optionsList","displayComponent","Popper","MenuList","autoFocusItem","map","option","text","toggleSideNav","AppBar","userOptions","logout","root","position","Toolbar","edge","menuButton","title","removeItem","flexGrow","list","Home","link","People","SettingsApplications","Feedback","SideNav","Drawer","anchor","List","item","ListItem","component","Link","to","ListItemIcon","ListItemText","Navbar","Comment","postId","comment","author","authorId","createdAt","_id","commentOptions","deleteComment","Card","card","CardHeader","subheader","dayjs","fromNow","moreVertIcon","commentPadding","CardContent","editComment","commentId","newComment","getState","index","indexOf","commentIndex","comments","put","params","splice","commentCount","delete","padding","CommentWriter","header","commentField","actions","addComment","unshift","likePost","likedByUser","likeCount","unlikePost","Post","handleComments","commentLoading","getComments","openPostEditor","closePostEditor","handleUpdate","editPost","UIloading","likeStatus","postOptions","deletePost","extend","relativeTime","CardActions","liked","number","callback","get","right","Dashboard","getPosts","lastDate","Date","limit","userId","ProfileEditor","birthDate","company","introduction","location","Profile","background","basicinfo","top","Verify","match","verify","progress","paper","rest","render","App","exact","path","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b93ac1e2.chunk.js","sourcesContent":["import {\r\n    SET_AUTHENTICATED,\r\n    SET_USER_DATA,\r\n    SET_UNAUTHENTICATED,\r\n    SET_RESPONSE_MESSAGE,\r\n    LOADING_UI,\r\n    STOP_LOADING_UI,\r\n    SET_ERROR\r\n} from '../types'\r\nimport axios from 'axios';\r\n\r\nexport const login = (userData, history) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    axios.post('/api/login', userData) \r\n         .then((res) => {\r\n             saveAuthorizationHeader(res.data.jwtToken)\r\n\t\t\t saveUser(res.data.user)\r\n             dispatch({\r\n                type: SET_USER_DATA,\r\n                payload: res.data.user\r\n             })\r\n             dispatch({type: SET_AUTHENTICATED})\r\n             dispatch({type: STOP_LOADING_UI})\r\n             history.push('/')\r\n         })\r\n         .catch((err) => {\r\n             dispatch({\r\n                 type: SET_ERROR,\r\n                 payload: err.response.data\r\n             })\r\n         })\r\n}\r\n\r\nexport const signup = (userData) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    axios.post('/api/signup', userData) \r\n         .then((res) => {\r\n             dispatch({\r\n                 type: SET_RESPONSE_MESSAGE,\r\n                 payload: res.data\r\n             })\r\n             dispatch({type: STOP_LOADING_UI})\r\n         })\r\n         .catch((err) => {\r\n             dispatch({\r\n                 type: SET_ERROR,\r\n                 payload: err.response.data\r\n             })\r\n         })\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('JWTToken');\r\n    localStorage.removeItem('user')\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({type: SET_UNAUTHENTICATED})\r\n}\r\n\r\nexport const verify = (id) => (dispatch) => {\r\n    dispatch({type: LOADING_UI})\r\n    axios.get(`/api/verify/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_RESPONSE_MESSAGE,\r\n                payload: res.data\r\n            })\r\n            dispatch({type: STOP_LOADING_UI})\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERROR,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n}\r\n\r\nconst saveAuthorizationHeader = (token) => {\r\n    const JWTToken = `Bearer ${token}`\r\n    localStorage.setItem('JWTToken', JWTToken)\r\n    axios.defaults.headers.common['Authorization'] = JWTToken;\r\n}\r\n\r\nconst saveUser = (user) => {\r\n\tlocalStorage.setItem('user', JSON.stringify(user))\r\n}","import React from 'react';\r\nimport { TextField, Button, Paper, Typography } from '@material-ui/core';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Lock from '@material-ui/icons/Lock';\r\nimport Forward from '@material-ui/icons/Forward';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './index.css';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../redux/actions/userActions'\r\n\r\nconst styles = {\r\n    input: {\r\n        \"margin-left\": \"15px\",\r\n        \"width\": \"300px\"\r\n    },\r\n    forwardIcon: {\r\n        \"font-size\": \"35px\",\r\n    },\r\n    form: {\r\n        \"display\": \"table\",\r\n        \"padding\": \"60px 60px 0px 60px\",\r\n        \"position\": \"relative\",\r\n        \"left\": \"50%\",\r\n        \"top\": \"50%\",\r\n        \"transform\": \"translate(-50%, 0%)\"\r\n    },\r\n    button: {\r\n        \"width\": \"346px\",\r\n        \"margin-bottom\": \"30px\",\r\n    },\r\n    generalError: {\r\n        \"color\": \"red\",\r\n        \"margin-top\": \"10px\"\r\n    },\r\n    signup: {\r\n        \"color\": \"blue\"\r\n    }\r\n}\r\n\r\nclass LoginForm extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        }\r\n        this.handleKeyChange = this.handleKeyChange.bind(this)\r\n        this.handleLogin = this.handleLogin.bind(this)\r\n    }\r\n    handleKeyChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleLogin() {\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        this.props.login(userData, this.props.history)\r\n    }\r\n    render() {\r\n        const { classes, UI: { loading, errors } } = this.props;\r\n        return(\r\n            <Paper className = {classes.form} elevation = {4}>\r\n                <div className = \"flexContainer\">\r\n                    <Forward className = {classes.forwardIcon}/>\r\n                    <h1 className = \"login\">Login</h1>\r\n                </div>\r\n                <div className = \"flexContainer\">\r\n                    <AccountCircle/>\r\n                    <TextField \r\n                        onChange = {this.handleKeyChange} \r\n                        label = \"Email\"\r\n                        name = \"email\"\r\n                        helperText = {errors.email}\r\n                        error = {errors.email ? true : false}\r\n                        className = {classes.input}\r\n                        disabled = {loading}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className = \"flexContainer\">\r\n                    <Lock/>\r\n                    <TextField \r\n                        type = \"password\"\r\n                        onChange = {this.handleKeyChange} \r\n                        label = \"Password\"\r\n                        name = \"password\"\r\n                        helperText = {errors.password}\r\n                        error = {errors.password ? true : false}\r\n                        className = {classes.input}\r\n                        disabled = {loading}\r\n                        />\r\n                </div>\r\n                {errors.general ? (\r\n                    <Typography variant=\"body2\" className={classes.generalError}>\r\n                        {errors.general}\r\n                    </Typography>\r\n                ) : (\"\")}\r\n                <br/>\r\n                <br/>\r\n                <Button \r\n                    color = \"primary\" \r\n                    variant = \"contained\" \r\n                    className = {classes.button} \r\n                    onClick = {this.handleLogin} \r\n                    disabled = {loading}\r\n                >\r\n                    {loading ? (\r\n                        <CircularProgress size={24} />\r\n                    ) : (\r\n                        \"Login\"\r\n                    )}\r\n                </Button>\r\n                <div className = \"ask\">\r\n                    Not have an account yet ? \r\n                    <Button className = {classes.signup} onClick = {() => this.props.history.push(\"/signup\")}>\r\n                        Sign up\r\n                    </Button>\r\n                </div>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    login\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps,\r\n)(withStyles(styles)(LoginForm))","// User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\n\r\n//UI reducer types\r\nexport const LOADING_UI = 'LOADING_UI'\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI'\r\nexport const TOGGLE_SIDE_NAV = 'TOGGLE_SIDE_NAV'\r\nexport const SET_ERROR = 'SET_ERROR'\r\nexport const SET_RESPONSE_MESSAGE = 'SET_RESPONSE_MESSAGE'\r\n\r\n//Data reducer types\r\nexport const LOADING_DATA = 'LOADING_DATA'\r\nexport const SET_USER_DATA = 'SET_USER_DATA'\r\nexport const STOP_LOADING_DATA = 'STOP_LOADING_DATA' \r\nexport const SET_DATA_ERROR = 'SET_DATA_ERROR'\r\n\r\n//Upload Post\r\nexport const UPLOAD_POST = 'UPLOAD_POST'\r\nexport const SET_MANY_POSTS = 'SET_MANY_POSTS'\r\nexport const SET_POST = 'SET_POST'\r\nexport const EDIT_POST = 'EDIT_POST'\r\nexport const DELETE_POST = 'DELETE_POST'\r\n\r\n//Like post\r\nexport const LIKE_POST = 'LIKE_POST'\r\nexport const UNLIKE_POST = 'UNLIKE_POST'\r\n\r\n//Comment Post\r\nexport const SET_COMMENT = 'SET_COMMENT'\r\nexport const ADD_COMMENT = 'ADD_COMMENT'\r\nexport const EDIT_COMMENT = 'EDIT_COMMENT'\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT'\r\n\r\n","import React from 'react'\r\nimport LoginForm from '../../components/LoginForm'\r\nimport './index.css'\r\n\r\nclass Login extends React.Component{\r\n    render() {\r\n        return(\r\n            <div className = \"loginPage\">\r\n                <img src = \"/assets/icons/icon2.png\" className = \"connectIcon\"></img>\r\n                <div className = \"name\">WINDLIFE NETWORK</div>\r\n                <LoginForm history = {this.props.history}/>\r\n                {/* <a>Forgot your password ?</a> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { TextField, Button, Paper, Typography } from '@material-ui/core';\r\nimport PersonAdd from '@material-ui/icons/PersonAdd'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './index.css'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { signup } from '../../redux/actions/userActions'\r\n\r\nconst styles = {\r\n    input: {\r\n        \"width\": \"300px\",\r\n        \"margin-top\": \"15px\"\r\n    },\r\n    personAddIcon: {\r\n        \"font-size\": \"35px\",\r\n    },\r\n    button: {\r\n        \"width\": \"346px\",\r\n        color: \"white\",\r\n        \"background-color\": \"lightskyblue\",\r\n        \"margin-bottom\": \"30px\",\r\n        '&:hover': {\r\n            \"background-color\": \"royalblue\"\r\n        }\r\n    },\r\n    form: {\r\n        \"display\": \"table\",\r\n        \"padding\": \"30px\"\r\n    },\r\n    message: {\r\n        \"color\": \"green\",\r\n        \"margin-top\": \"10px\"\r\n    }\r\n}\r\n\r\nclass SignupForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n        }\r\n        this.handleKeyChange = this.handleKeyChange.bind(this)\r\n        this.handleSignup = this.handleSignup.bind(this)\r\n    }\r\n    handleKeyChange(e) {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    handleSignup() {\r\n        const userData = {\r\n            email: this.state.email,\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        }\r\n        this.props.signup(userData)\r\n    }\r\n    render() {\r\n        const { classes, UI: { loading, errors, message: { message } } } = this.props\r\n        return (\r\n            <Paper className = {classes.form} elevation = {6}>\r\n                <div className = \"flexContainer\">\r\n                    <PersonAdd className = {classes.personAddIcon}/>\r\n                    <h1 className = \"signup\">Signup</h1>\r\n                </div>\r\n                    <TextField \r\n                        onChange = {this.handleKeyChange} \r\n                        label = \"Email\" \r\n                        name = \"email\"\r\n                        helperText = {errors.email}\r\n                        error = {errors.email ? true : false}\r\n                        className = {classes.input}\r\n                        disabled = {loading}\r\n                    />\r\n                    <br/>\r\n                    <TextField \r\n                        onChange = {this.handleKeyChange} \r\n                        label = \"Username\" \r\n                        name = \"username\"\r\n                        helperText = {errors.username}\r\n                        error = {errors.username ? true : false}\r\n                        className = {classes.input}\r\n                        disabled = {loading}\r\n                    />\r\n                    <br/>\r\n                    <TextField \r\n                        type = \"password\"\r\n                        onChange = {this.handleKeyChange} \r\n                        label = \"Password\" \r\n                        name = \"password\"\r\n                        helperText = {errors.password}\r\n                        error = {errors.password ? true : false}\r\n                        className = {classes.input}\r\n                        disabled = {loading}\r\n                    />\r\n                    <br/>\r\n                    <TextField \r\n                        type = \"password\"\r\n                        onChange = {this.handleKeyChange} \r\n                        label = \"Repeat your password\" \r\n                        name = \"confirmPassword\"\r\n                        helperText = {errors.confirmPassword}\r\n                        error = {errors.confirmPassword ? true : false}\r\n                        className = {classes.input}\r\n                        disabled = {loading}\r\n                    />\r\n                    {message ? (\r\n                        <Typography variant=\"body2\" className={classes.message}>\r\n                            {message}\r\n                        </Typography>\r\n                    ) : (\"\")}\r\n                    <br/>\r\n                    <br/>\r\n                    <Button \r\n                        variant = \"contained\" \r\n                        className = {classes.button} \r\n                        onClick = {this.handleSignup} \r\n                        disabled = {loading}\r\n                    >\r\n                        {loading ? (\r\n                            <CircularProgress size={24} />\r\n                        ) : (\r\n                            \"Sign up\"\r\n                        )}\r\n                    </Button>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    signup\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps,\r\n)(withStyles(styles)(SignupForm))","import React from 'react'\r\nimport SignupForm from '../../components/SignupForm'\r\nimport './index.css'\r\n\r\nclass Signup extends React.Component{\r\n    render() {\r\n        return(\r\n            <div className = \"signupPage\">\r\n                <div className = \"container\">\r\n                    <div className = \"description\">\r\n                    \tSignup to join our network\r\n                    </div>\r\n                    <SignupForm/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nexport default function SnackBar(props) {\r\n  const { open, handleClose } = props\r\n  return (\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        {props.message ? (\r\n            <MySnackbarContentWrapper\r\n                onClose={handleClose}\r\n                variant=\"success\"\r\n                message={props.message}\r\n            />\r\n        ) : (\r\n            <MySnackbarContentWrapper\r\n                onClose={handleClose}\r\n                variant=\"error\"\r\n                message={props.errors.message}\r\n            />\r\n        )}\r\n      </Snackbar>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { Menu, MenuItem, IconButton } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\n\r\nclass PostOptions extends React.Component {\r\n   constructor() {\r\n     super()\r\n     this.state = {\r\n       anchorEl: null\r\n     }\r\n   }\r\n   openMenu = (e) => {\r\n     this.setState({anchorEl: e.currentTarget})\r\n   }\r\n   closeMenu = (e) => {\r\n     this.setState({anchorEl: null})\r\n   }\r\n    render() {\r\n        return (\r\n            <div>\r\n              <IconButton onClick={this.openMenu}>\r\n                <MoreVertIcon/>\r\n              </IconButton>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={this.state.anchorEl}\r\n                open={Boolean(this.state.anchorEl)}\r\n                onClose={this.closeMenu}\r\n              >\r\n                  <MenuItem>Disable comments</MenuItem>\r\n                  <MenuItem>Disable sharing</MenuItem>\r\n              </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostOptions;","import React from 'react'\r\nimport { TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Avatar, Button, CircularProgress } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nimport PostOptions from './postOptions'\r\n\r\nconst styles = {\r\n    postField: {\r\n        \"position\": \"relative\",\r\n        \"left\": \"50%\",\r\n        \"top\": \"50%\",\r\n        \"transform\": \"translate(-50%, 0%)\",\r\n        width: \"300px\"\r\n    },\r\n    avatar: {\r\n      \"background-color\": \"rgb(0, 188, 212)\",\r\n      \"margin-right\": \"15px\"\r\n    },\r\n    dialog: {\r\n      width: \"400px\",\r\n      height: \"300px\"\r\n    },\r\n    fieldContainer: {\r\n      \"overflow-y\": \"hidden\"\r\n    },\r\n    postHeader: {\r\n      display: \"flex\",\r\n      \"justify-content\": \"space-between\",\r\n    },\r\n    subHeader: {\r\n      display: \"flex\",\r\n      \"align-items\": \"center\"\r\n    }\r\n}\r\n\r\nclass PostEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      postContent: \"\"\r\n    }\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({postContent: e.target.value})\r\n  }\r\n\trender() {\r\n\t\tconst { classes, loading, open, closeDialog, handleUpload, mode } = this.props;\r\n\t\treturn (\r\n\t\t\t<Dialog open={open} onClose={closeDialog}>\r\n              <div className = {classes.dialog}>\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                  <div className = {classes.postHeader}>\r\n                    <div className = {classes.subHeader}>\r\n                      <Avatar className = {classes.avatar}>\r\n            \t\t\t{JSON.parse(localStorage.user).username[0].toUpperCase()}\r\n            \t\t  </Avatar>\r\n                      <span>\r\n                        {JSON.parse(localStorage.user).username}\r\n                      </span>\r\n                    </div>\r\n                    <PostOptions/>\r\n                  </div>\r\n                </DialogTitle>\r\n                <DialogContent className = {classes.fieldContainer}>\r\n                  <TextField\r\n                      autoFocus\r\n                      className = {classes.postField}\r\n                      margin=\"dense\"\r\n                      placeholder = \"What are you thinking\"\r\n                      multiline\r\n                      rows = {2}\r\n                      rowsMax = {4}\r\n                      onChange = {this.handleChange}\r\n                  />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={closeDialog} color=\"primary\" disabled = {loading}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button \r\n                    onClick={() => handleUpload(this.state.postContent)} \r\n                    color=\"primary\" \r\n                    disabled = {loading}\r\n                  >\r\n                    {loading ? (\r\n                          <CircularProgress size={24} />\r\n                      ) : (\r\n                          mode\r\n                      )}\r\n                  </Button>\r\n                </DialogActions>\r\n              </div>\r\n            </Dialog>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(PostEditor)","import {\r\n    SET_AUTHENTICATED,\r\n    SET_USER_DATA,\r\n    SET_UNAUTHENTICATED,\r\n} from '../types'\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    user: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true\r\n            }\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        case SET_UNAUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: false\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}","import {\r\n    LOADING_DATA,\r\n    UPLOAD_POST,\r\n    SET_MANY_POSTS,\r\n    SET_POST,\r\n    SET_DATA_ERROR,\r\n    LIKE_POST,\r\n    UNLIKE_POST,\r\n    EDIT_POST,\r\n    DELETE_POST,\r\n    SET_COMMENT,\r\n    ADD_COMMENT,\r\n    DELETE_COMMENT\r\n} from '../types'\r\n\r\nconst intialState = {\r\n    posts: [],\r\n    post: [],\r\n    errors: {},\r\n    loading: false\r\n}\r\n\r\nexport default function (state = intialState, action) {\r\n    switch (action.type) {\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPLOAD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [action.payload, ...state.posts],\r\n            }\r\n        case SET_MANY_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_POST:\r\n            return {\r\n                ...state,\r\n                post: action.payload,\r\n                loading: false\r\n            }\r\n        case LIKE_POST:\r\n        case UNLIKE_POST:\r\n        case EDIT_POST:\r\n        case DELETE_POST:\r\n        case SET_COMMENT:\r\n        case ADD_COMMENT:\r\n        case DELETE_COMMENT:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            }\r\n        case SET_DATA_ERROR:\r\n            return {\r\n                ...state,\r\n                errors: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    LOADING_UI,\r\n    STOP_LOADING_UI,\r\n    SET_ERROR,\r\n    SET_RESPONSE_MESSAGE,\r\n    TOGGLE_SIDE_NAV\r\n} from '../types'\r\n\r\nconst intialState = {\r\n    loading: false,\r\n    sideNavOpen: false,\r\n    errors: {},\r\n    message: {}\r\n}\r\n\r\nexport default function(state = intialState, action) {\r\n    switch(action.type) {\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case STOP_LOADING_UI: \r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case TOGGLE_SIDE_NAV: \r\n            return {\r\n                ...state,\r\n                sideNavOpen: !state.sideNavOpen\r\n            }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload\r\n            }\r\n        case SET_RESPONSE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}","  \r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './reducers/userReducer'\r\nimport dataReducer from './reducers/dataReducer'\r\nimport uiReducer from './reducers/uiReducer'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk]\r\nconst enhancer = applyMiddleware(...middleware)\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    initialState,\r\n    enhancer\r\n)\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Button, Paper, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core/';\r\nimport {\r\n  Typography,\r\n  ButtonBase,\r\n  Avatar\r\n} from '@material-ui/core';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SnackBar from './snackBar'\r\nimport PostEditor from '../PostEditor'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { uploadPost } from '../../redux/actions/dataActions'\r\n\r\nconst styles = {\r\n    container: {\r\n      width: \"600px\",\r\n      \"position\": \"relative\",\r\n      \"left\": \"50%\",\r\n      \"top\": \"50%\",\r\n      \"transform\": \"translate(-50%, 0%)\",\r\n      \"background-color\": \"white\",\r\n      \"box-shadow\": \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\r\n      transition: \"0.3s\",\r\n      \"padding\": \"20px 0px 20px 20px\",\r\n      \"justify-content\": \"flex-start\",\r\n      '&:hover': {\r\n        \"background-color\": \"#d9d9d9\"\r\n      }\r\n    },\r\n    avatar: {\r\n      \"background-color\": \"rgb(0, 188, 212)\",\r\n      \"margin-right\": \"15px\"\r\n    },\r\n    placeHolder: {\r\n      opacity: 0.4\r\n    },\r\n}\r\n\r\nclass PostWriter extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            snackBarOpen: false\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n      if(nextProps.UI.loading === false && this.props.UI.loading === true) {\r\n        this.closeDialog()\r\n        this.setState({snackBarOpen: true})\r\n      }\r\n    }\r\n    openDialog = () => {\r\n        this.setState({open: true})\r\n    }\r\n    closeDialog = () => {\r\n        this.setState({open: false})\r\n    }\r\n    closeSnackBar = () => {\r\n        this.setState({snackBarOpen: false})\r\n    }\r\n    handleUpload = (postContent) => {\r\n      const newPost = {\r\n        content: postContent\r\n      }\r\n      this.props.uploadPost(newPost)\r\n    }\r\n    render() {\r\n        const { classes, UI: { loading, errors, message: { message } } } = this.props;\r\n        return(\r\n            <div>\r\n            <ButtonBase className = {classes.container} onClick = {this.openDialog}>\r\n              <Avatar className = {classes.avatar}>\r\n                {JSON.parse(localStorage.user).username[0].toUpperCase()}\r\n              </Avatar>\r\n              <Typography className = {classes.placeHolder}>What are you thinking</Typography>\r\n            </ButtonBase>\r\n            <PostEditor \r\n              loading = {loading} \r\n              open = {this.state.open}\r\n              closeDialog = {this.closeDialog}\r\n              handleUpload = {this.handleUpload}\r\n              mode = \"Post\"\r\n            />\r\n            <SnackBar\r\n                  errors = {errors} \r\n                  message = {message} \r\n                  open = {this.state.snackBarOpen}\r\n                  handleClose = {this.closeSnackBar}\r\n             />\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI\r\n})\r\n\r\nconst mapActionsToProps = {\r\n  uploadPost\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps,\r\n)(withStyles(styles)(PostWriter))\r\n","import {\r\n    LOADING_UI,\r\n    STOP_LOADING_UI,\r\n    LOADING_DATA,\r\n    UPLOAD_POST,\r\n    SET_MANY_POSTS,\r\n    SET_POST,\r\n    EDIT_POST,\r\n    DELETE_POST,\r\n    SET_DATA_ERROR,\r\n    SET_RESPONSE_MESSAGE,\r\n\r\n} from '../types'\r\nimport axios from 'axios'\r\nimport store from '../store'\r\n\r\nexport const getPosts = () => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA })\r\n    axios.get('/api/posts', {\r\n        params: {\r\n            lastDate: new Date(),\r\n            limit: 10\r\n        }\r\n    }). then(res => {\r\n            let userId = localStorage.userId\r\n            dispatch({\r\n                type: SET_MANY_POSTS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            // console.log(err)\r\n            dispatch({\r\n                type: SET_DATA_ERROR,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const getPost = (postId) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_POST\r\n    })\r\n}\r\n\r\nexport const uploadPost = (post) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI})\r\n    axios.post('/api/newpost', post)\r\n         .then(res => {\r\n             dispatch({\r\n                 type: UPLOAD_POST,\r\n                 payload: res.data.post\r\n             })\r\n             dispatch({\r\n                 type: SET_RESPONSE_MESSAGE,\r\n                 payload: res.data\r\n             })\r\n         })\r\n         .catch(err => {\r\n             dispatch({\r\n                 type: SET_DATA_ERROR,\r\n                 payload: err.response.data\r\n             })\r\n         }) \r\n}\r\n\r\nexport const editPost = (postId, newPost, callback) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI})\r\n    axios\r\n        .put(`/api/post/${postId}`, newPost)\r\n        .then(res => {\r\n            let posts = store.getState().data.posts;\r\n            let index = posts.map(item => item._id).indexOf(postId);\r\n            posts[index] = res.data.post;\r\n            dispatch({\r\n                type: EDIT_POST,\r\n                payload: posts\r\n            })\r\n            dispatch({\r\n                type: STOP_LOADING_UI\r\n            })\r\n            callback()\r\n        })\r\n} \r\nexport const deletePost = (postId) => (dispatch) => {\r\n    let posts = store.getState().data.posts;\r\n    let index = posts.map(item => item._id).indexOf(postId);\r\n    posts.splice(index, 1);\r\n    dispatch({\r\n        type: DELETE_POST,\r\n        payload: posts\r\n    })\r\n    axios\r\n        .delete(`/api/post/${postId}`)\r\n        .then(res => {\r\n\r\n        })\r\n}","import React from 'react';\r\nimport { MenuList, MenuItem, IconButton, Popper, Paper } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\n\r\nclass Options extends React.Component {\r\n   constructor() {\r\n     super()\r\n     this.state = {\r\n       anchorEl: null\r\n     }\r\n   }\r\n   toggleMenu = (e) => {\r\n    if(!this.state.anchorEl) {\r\n      this.setState({anchorEl: e.currentTarget})\r\n    }\r\n    else {\r\n      this.setState({anchorEl: null})\r\n    }\r\n   }\r\n    render() {\r\n        const { optionsList, displayComponent } = this.props; \r\n        return (\r\n            <div>\r\n              <IconButton onClick={this.toggleMenu}>\r\n                {displayComponent}\r\n              </IconButton>\r\n              <Popper open = {Boolean(this.state.anchorEl)} anchorEl ={this.state.anchorEl}>\r\n                <Paper elevation = {2}>\r\n                  <MenuList\r\n                    id=\"simple-menu\"\r\n                    autoFocusItem = {Boolean(this.state.anchorEl)}\r\n                  >\r\n                      {optionsList.map((option) => (\r\n                        <MenuItem key = {option.text} onClick = {option.action}>{option.text}</MenuItem>\r\n                      ))}\r\n                  </MenuList>\r\n                </Paper>\r\n              </Popper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Options;","import {\r\n    TOGGLE_SIDE_NAV\r\n} from '../types'\r\n\r\nexport const toggleSideNav = () => (dispatch) => {\r\n    dispatch({type: TOGGLE_SIDE_NAV});\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Header from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Avatar } from '@material-ui/core'\r\nimport Options from '../Options' \r\n\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../redux/actions/userActions'\r\nimport { toggleSideNav } from '../../redux/actions/uiActions'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \"margin-bottom\": \"25px\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  avatar: {\r\n    \"background-color\": \"rgb(0, 188, 212)\",\r\n  },\r\n});\r\n\r\nclass AppBar extends React.Component {\r\n  render(){\r\n    const { classes, toggleSideNav} = this.props;\r\n    const userOptions = [\r\n      {\r\n        text: \"Log out\",\r\n        action: this.props.logout\r\n      },\r\n    ]\r\n    return (\r\n        <div className={classes.root}>\r\n          <Header position=\"static\">\r\n            <Toolbar>\r\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" onClick = {toggleSideNav}>\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                News\r\n              </Typography>\r\n              <Options optionsList = {userOptions} displayComponent = {\r\n                <Avatar className = {classes.avatar}>\r\n                  {JSON.parse(localStorage.user).username[0].toUpperCase()}\r\n                </Avatar>\r\n              }/>\r\n            </Toolbar>\r\n          </Header>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    logout,\r\n    toggleSideNav\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(withStyles(styles)(AppBar))\r\n","import React from 'react'\r\nimport { Home, AccountCircle, SettingsApplications, People, Feedback } from '@material-ui/icons'\r\n\r\nconst list = [\r\n    {\r\n        name: \"Home\",\r\n        icon: <Home/>,\r\n        link: \"/\"\r\n    },\r\n    {\r\n        name: \"Profile\",\r\n        icon: <AccountCircle/>,\r\n        link: \"/profile\"\r\n    },\r\n    {\r\n        name: \"People\",\r\n        icon: <People/>,\r\n        link: \"/\"\r\n    },\r\n    {\r\n        name: \"Setting\",\r\n        icon: <SettingsApplications/>,\r\n        link: \"/\"\r\n    },\r\n    {\r\n        name: \"Feedback\",\r\n        icon: <Feedback/>,\r\n        link: \"/\"\r\n    }\r\n]\r\n\r\nexport default list","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Drawer, ListItem, List, ListItemIcon, ListItemText } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { toggleSideNav } from '../../redux/actions/uiActions'\r\n\r\nimport list from '../../config/sideNav'\r\n\r\nconst styles = {\r\n    item: {\r\n        width: \"250px\"\r\n    }\r\n}\r\n\r\nclass SideNav extends React.Component{\r\n    render() {\r\n        const { classes, sideNavOpen, toggleSideNav } = this.props; \r\n        return(\r\n            <Drawer anchor = \"left\" open = {sideNavOpen} onClose = {toggleSideNav}>\r\n                <List>\r\n                    {list.map((item) => (\r\n                    <ListItem\r\n                         className = {classes.item} \r\n                         component = {Link} \r\n                         to = {item.link} \r\n                         button \r\n                         key={item.name}\r\n                         onClick = {toggleSideNav}\r\n                     >\r\n                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n                        <ListItemText primary={item.name} />\r\n                    </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sideNavOpen: state.UI.sideNavOpen\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    toggleSideNav: toggleSideNav\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(withStyles(styles)(SideNav))","import React from 'react';\r\nimport AppBar from './appBar'\r\nimport SideNav from './sideNav'\r\n\r\nclass Navbar extends React.Component{\r\n    render() {\r\n        return(\r\n            <div>\r\n                <AppBar/>\r\n                <SideNav/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Options from '../Options'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { editComment, deleteComment } from '../../redux/actions/commentActions'\r\n\r\nconst styles = {\r\n  card: {\r\n    \"position\": \"relative\",\r\n    \"left\": \"50%\",\r\n    \"top\": \"50%\",\r\n    \"transform\": \"translate(-50%, 0%)\",\r\n\t  \"box-shadow\": \"none\"\r\n  },\r\n  avatar: {\r\n    \"background-color\": \"rgb(0, 188, 212)\",\r\n\t  width: \"30px\",\r\n\t  height: \"30px\",\r\n\t  \"font-size\": \"0.95rem\"\r\n  },\r\n  moreVertIcon: {\r\n\t  \"font-size\": \"1.25rem\"\r\n  },\r\n  commentPadding: {\r\n\t  padding: \"4px 10px 4px 10px\"\r\n  } \r\n};\r\n\r\nclass Comment extends React.Component{\r\n\trender() {\r\n\t\tconst { classes, postId } = this.props;\r\n\t\tconst { author, authorId, content, createdAt, _id } = this.props.comment\r\n    const commentOptions = [\r\n      {\r\n        text: 'Edit',\r\n        action: () => {}\r\n      },\r\n      {\r\n        text: 'Delete',\r\n        action: () => this.props.deleteComment(postId, _id)\r\n      }\r\n    ]\r\n\t\treturn(\r\n            <Card key = {_id} className={classes.card}>\r\n                <CardHeader\r\n                    avatar={\r\n                    <Avatar className={classes.avatar}>\r\n                        {author[0].toUpperCase()}\r\n                    </Avatar>\r\n                    }\r\n                    title = {author}\r\n          \t\t\t\t\tsubheader= {dayjs(createdAt).fromNow()}\r\n          \t\t\t\t\taction = {\r\n                      (authorId === JSON.parse(localStorage.user)._id) ? (\r\n                          <Options optionsList = {commentOptions} displayComponent = {\r\n                            <MoreVertIcon className = {classes.moreVertIcon}/>\r\n                          }\r\n                        />\r\n                        ) : (\r\n                          \"\"\r\n                        )\r\n          \t\t\t\t\t\t  \r\n          \t\t\t\t\t}\r\n\t\t\t\t\t          className = {classes.commentPadding}\r\n                />\r\n                <CardContent className = {classes.commentPadding}>\r\n        \t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n        \t\t\t\t\t\t{content}\r\n        \t\t\t\t\t</Typography>\r\n                </CardContent>\r\n          </Card>\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  editComment,\r\n  deleteComment\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapActionsToProps\r\n)(withStyles(styles)(Comment));","import {\r\n\tSET_COMMENT,\r\n    ADD_COMMENT,\r\n    EDIT_COMMENT,\r\n    DELETE_COMMENT\r\n} from '../types'\r\nimport axios from 'axios'\r\nimport store from '../store'\r\n\r\n export const getComments = (postId, callback) => (dispatch) => {\r\n    axios\r\n        .get(`/api/post/${postId}/comments`)\r\n        .then(res => {\r\n\t\t\tlet posts = store.getState().data.posts;\r\n\t\t\tlet index = posts.map(item => item._id).indexOf(postId)\r\n\t\t\tposts[index].comments = res.data\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: SET_COMMENT,\r\n\t\t\t\tpayload: posts\r\n\t\t\t})\r\n\t\t\tcallback()\r\n        })\r\n }\r\n\r\n export const addComment = (postId, comment) => (dispatch) => {\r\n\taxios\r\n\t\t.post(`/api/post/${postId}/comments`,comment)\r\n\t\t.then(res => {\r\n\t\t\tlet posts = store.getState().data.posts;\r\n\t\t\tlet index = posts.map(item => item._id).indexOf(postId)\r\n\t\t\tposts[index].comments.unshift(res.data.comment)\r\n\t\t\tposts[index].commentCount += 1\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ADD_COMMENT,\r\n\t\t\t\tpayload: posts\r\n\t\t\t})\r\n\t\t}) \r\n }\r\n \r\n export const editComment = (postId, commentId, newComment) => (dispatch) => {\r\n\tlet posts = store.getState().data.posts;\r\n\tlet index = posts.map(item => item._id).indexOf(postId)\r\n\tlet commentIndex = posts[index].comments.map(item => item._id).indexOf(commentId);\r\n\tposts[index].comments[commentIndex].content = newComment.content;\r\n\tdispatch({\r\n\t\ttype: EDIT_COMMENT,\r\n\t\tpayload: posts\r\n\t})\r\n \taxios\r\n \t\t.put(`/api/post/${postId}/comments`, newComment, {\r\n \t\t\tparams: {\r\n \t\t\t\tid: commentId\r\n \t\t\t}\r\n \t\t})\r\n \t\t.then(res => {\r\n \t\t})\r\n }\r\n\r\n export const deleteComment = (postId, commentId) => (dispatch) => {\r\n\tlet posts = store.getState().data.posts;\r\n\tlet index = posts.map(item => item._id).indexOf(postId);\r\n\tlet commentIndex = posts[index].comments.map(item => item._id).indexOf(commentId);\r\n\tposts[index].comments.splice(commentIndex, 1);\r\n\tposts[index].commentCount -= 1;\r\n\tdispatch({\r\n\t\ttype: DELETE_COMMENT,\r\n\t\tpayload: posts\r\n\t})\r\n\taxios\r\n\t\t.delete(`/api/post/${postId}/comments`, {\r\n\t\t\tparams: {\r\n\t\t\t\tid: commentId\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\t\r\n\t\t})\r\n }","import React from 'react'\r\nimport { TextField, Avatar, Button } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { addComment } from '../../redux/actions/commentActions'\r\nimport { connect } from 'react-redux'\r\n\r\nconst styles = {\r\n\theader: {\r\n\t\t\"border-top\": \"1px solid #cccccc\",\r\n\t\tdisplay: \"flex\",\r\n\t\t\"align-items\": \"center\",\r\n\t\t\"padding\":\"8px 8px 8px 8px\"\r\n\t},\r\n\tcommentField: {\r\n\t\twidth: \"500px\"\r\n\t},\r\n\tavatar: {\r\n\t\t\"background-color\": \"rgb(0, 188, 212)\",\r\n\t\twidth: \"30px\",\r\n\t\theight: \"30px\",\r\n\t\t\"font-size\": \"0.95rem\",\r\n\t\t\"margin-right\": \"15px\"\r\n\t},\r\n\tactions: {\r\n\t\tdisplay: \"flex\",\r\n\t\t\"justify-content\": \"flex-end\",\r\n\t\t\"padding\": \"8px 8px 8px 8px\"\r\n\t}\r\n}\r\n\r\nclass CommentWriter extends React.Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcontent: \"\"\r\n\t\t}\r\n\r\n\t}\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({content: e.target.value})\r\n\t}\r\n\trender() {\r\n\t\tconst { classes, author, postId } = this.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className = {classes.header}>\r\n\t\t\t\t\t<Avatar className = {classes.avatar}>\r\n\t\t\t\t\t\t{author[0].toUpperCase()}\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tclassName = {classes.commentField}\r\n\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\tplaceholder = \"Leave a comment\"\r\n\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\trows = {2}\r\n\t\t\t\t\t\trowsMax = {4}\r\n\t\t\t\t\t\tonChange = {this.handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className = {classes.actions}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor = \"primary\"\r\n\t\t\t\t\t\tonClick = {() => this.props.addComment(postId, {\r\n\t\t\t\t\t\t\tcontent: this.state.content\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tPost\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapActionsToProps = {\r\n\taddComment\r\n}\r\n\r\nexport default connect(\r\n\tnull,\r\n\tmapActionsToProps\r\n)(withStyles(styles)(CommentWriter))","import {\r\n    LIKE_POST,\r\n    UNLIKE_POST\r\n} from '../types'\r\nimport axios from 'axios'\r\nimport store from '../store'\r\n\r\nexport const likePost = (postId) => (dispatch) => {\r\n    let posts = store.getState().data.posts;\r\n    let index = posts.map(item => item._id).indexOf(postId);\r\n    posts[index].likedByUser = true;\r\n\tposts[index].likeCount += 1;\r\n    dispatch({\r\n        type: LIKE_POST,\r\n        payload: posts\r\n    })\r\n    axios\r\n        .post(`/api/post/${postId}/likes`)\r\n        .then(res => {\r\n        })\r\n}\r\n\r\nexport const unlikePost = (postId) => (dispatch) => {\r\n    let posts = store.getState().data.posts;\r\n    let index = posts.map(item => item._id).indexOf(postId);\r\n    posts[index].likedByUser = false;\r\n\tposts[index].likeCount -= 1;\r\n    dispatch({\r\n        type: UNLIKE_POST,\r\n        payload: posts\r\n    })\r\n    axios\r\n        .delete(`/api/post/${postId}/likes`)\r\n        .then(res => {\r\n        }) \r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Avatar,\r\n    Button,\r\n    CircularProgress,\r\n    IconButton,\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport CommentIcon from '@material-ui/icons/Comment'\r\nimport Share from '@material-ui/icons/Share'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Options from '../Options' \r\nimport PostEditor from '../PostEditor' \r\nimport Comment from '../Comment'\r\nimport CommentWriter from '../CommentWriter'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { likePost, unlikePost } from '../../redux/actions/likeActions'\r\nimport { editPost, deletePost } from '../../redux/actions/dataActions'\r\nimport { getComments } from '../../redux/actions/commentActions'\r\n\r\nconst styles = {\r\n  card: {\r\n    width: \"600px\",\r\n    \"position\": \"relative\",\r\n    \"left\": \"50%\",\r\n    \"top\": \"50%\",\r\n    \"transform\": \"translate(-50%, 0%)\",\r\n    \"margin-top\": \"25px\",\r\n    \"margin-bottom\": \"25px\"\r\n  },\r\n  avatar: {\r\n      \"background-color\": \"rgb(0, 188, 212)\",\r\n  },\r\n  action: {\r\n      display: \"flex\",\r\n      \"justify-content\": \"space-around\",\r\n  },\r\n  liked: {\r\n      \"color\": \"rgb(0, 188, 212)\"\r\n  },\r\n  number: {\r\n    position: \"relative\",\r\n\tright: \"6px\"\r\n  },\r\n  comments: {\r\n    \"border-top\": \"1px solid #cccccc\",\r\n    \"max-height\": \"500px\",\r\n    \"overflow-y\": \"auto\",\r\n    \"overflow-x\": \"hidden\"\r\n  },\r\n  loading: {\r\n    \"position\": \"relative\",\r\n    \"left\": \"50%\",\r\n    \"top\": \"50%\",\r\n    \"transform\": \"translate(-50%, 0%)\"\r\n  }\r\n};\r\n\r\nclass Post extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            commentLoading: false,\r\n            openPostEditor: false\r\n        }\r\n    }\r\n    handleComments = (postId) => {\r\n        this.setState({commentLoading: true})\r\n        this.props.getComments(postId, () => {\r\n            this.setState({commentLoading: false})\r\n        })\r\n    }\r\n    openPostEditor = () => {\r\n        this.setState({openPostEditor: true})\r\n    }\r\n    closePostEditor = () => {\r\n        this.setState({openPostEditor: false})\r\n    }\r\n    handleUpdate = (postContent) => {\r\n      const newPost = {\r\n        content: postContent\r\n      }\r\n      this.props.editPost(this.props.post._id, newPost, () => {\r\n        this.closePostEditor()\r\n      })\r\n    }\r\n    render() {\r\n        const { classes, UIloading, post, likeStatus, likePost, unlikePost, comments, commentCount } = this.props;\r\n        const postOptions = [\r\n            {\r\n                text: \"Edit post\",\r\n                action: this.openPostEditor\r\n            },\r\n            {\r\n                text: \"Delete post\",\r\n                action: () => this.props.deletePost(post._id)\r\n            },\r\n            {\r\n                text: \"Disable share\",\r\n                action: () => {}\r\n            },\r\n            {\r\n                text: \"Disable comment\",\r\n                action: () => {}\r\n            }\r\n        ]\r\n        dayjs.extend(relativeTime);\r\n        return(\r\n            <Card elevation = {4} key = {post._id} className={classes.card}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar className={classes.avatar}>\r\n                            {post.author[0].toUpperCase()}\r\n                        </Avatar>\r\n                    }\r\n                    title = {post.author}\r\n                    subheader= {dayjs(post.createdAt).fromNow()}\r\n\t\t\t\t\taction = {\r\n\t\t\t\t\t\t(post.authorId === JSON.parse(localStorage.user)._id)\r\n\t\t\t\t\t\t? (\r\n\t\t\t\t\t\t\t<Options optionsList = {postOptions} displayComponent = {<MoreVertIcon/>}/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n                />\r\n                <CardContent>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    {post.content}\r\n                </Typography>\r\n                </CardContent>\r\n                <CardActions className = {classes.action}>\r\n                    <div>\r\n                        <IconButton\r\n                            title = \"Like\" \r\n                            onClick = {(likeStatus) ? () => unlikePost(post._id)\r\n                                                        : () => likePost(post._id)}\r\n                        >\r\n                            <FavoriteIcon className = {(likeStatus) ? classes.liked : \"\"}/>\r\n                        </IconButton>\r\n                        <Typography variant = \"caption\" className = {classes.number}>\r\n                            {post.likeCount}\r\n                        </Typography>\r\n                    </div>\r\n                    <div>\r\n                        <IconButton title = \"Comment\" onClick = {\r\n                            () => this.handleComments(post._id)\r\n                        }>\r\n                            <CommentIcon/>\r\n                        </IconButton>\r\n                        <Typography variant = \"caption\" className = {classes.number}>\r\n                            {commentCount}\r\n                        </Typography>\r\n                    </div>\r\n                    <IconButton title = \"Share\">\r\n                        <Share/>\r\n                    </IconButton>\r\n                </CardActions>\r\n                    {comments ? (\r\n                        <div>\r\n                            <div className = {classes.comments}>\r\n                                {comments.map((comment) => \r\n                                        <Comment key = {comment._id} comment = {comment} postId = {post._id}/>\r\n                                )}\r\n                            </div>\r\n                            <CommentWriter author = {post.author} postId = {post._id}/>\r\n                        </div>\r\n                        ) : (\r\n                            this.state.commentLoading ? (\r\n                                    <CircularProgress size = {34} className = {classes.loading}/>\r\n                                ) : (\r\n                                    \"\"\r\n                                )\r\n                        )}\r\n            <PostEditor \r\n              loading = {UIloading} \r\n              open = {this.state.openPostEditor}\r\n              closeDialog = {this.closePostEditor}\r\n              handleUpload = {this.handleUpdate}\r\n              mode = \"Update\"\r\n            />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UIloading: state.UI.loading\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    likePost,\r\n    unlikePost,\r\n\tgetComments,\r\n    editPost,\r\n    deletePost\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(withStyles(styles)(Post))","import React from 'react'\r\nimport PostWriter from '../../components/PostWriter'\r\nimport Navbar from '../../components/Navbar'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n// import Comment from '../../components/Comment'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport Post from '../../components/Post'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getPosts } from '../../redux/actions/dataActions'\r\nimport { likePost, unlikePost } from '../../redux/actions/likeActions'\r\n\r\nconst styles = {\r\n    loading: {\r\n        \"position\": \"relative\",\r\n        \"left\": \"50%\",\r\n        \"margin-top\": \"200px\",\r\n        \"transform\": \"translate(-50%, 0%)\",\r\n    }\r\n}\r\n\r\nclass Dashboard extends React.Component{\r\n    componentDidMount() {\r\n        this.props.getPosts()\r\n    }\r\n    render() {\r\n        const { posts, loading } = this.props.data\r\n        const { classes, likePost, unlikePost } = this.props\r\n\t\tdayjs.extend(relativeTime);\r\n        return(\r\n            <div>\r\n                <Navbar/>\r\n                <PostWriter/>\r\n                {loading ? (\r\n                    <CircularProgress size = {100} className = {classes.loading}/>\r\n                ) : (\r\n                    posts.map((post) => \r\n\t\t\t\t\t\t<Post key = {post._id} post = {post} likeStatus = {post.likedByUser} comments = {post.comments} commentCount = {post.commentCount} />\r\n\t\t\t\t\t\t//If I do not extract the likeStatus which is actually the change,\r\n\t\t\t\t\t\t//the Post Component will not re-render\r\n                    )\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    getPosts,\r\n\tlikePost,\r\n    unlikePost\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps,\r\n)(withStyles(styles)(Dashboard))","import React, { Component } from 'react'\r\nimport {\r\n    TextField,\r\n    Paper,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle, Avatar,\r\n    Button,\r\n    CircularProgress \r\n} from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = {\r\n    dialog: {\r\n        width: \"400px\",\r\n        height: \"300px\"\r\n    },\r\n    input: {\r\n        \"width\": \"300px\",\r\n        \"margin-top\": \"15px\"\r\n    },\r\n}\r\n\r\nclass ProfileEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            birthDate: \"\",\r\n            company: \"\",\r\n            introduction: \"\",\r\n            location: \"\"\r\n        }\r\n    }\r\n    handleKeyChange(e) {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    render() {\r\n\t\tconst { classes, loading, open, closeDialog } = this.props;\r\n\t\treturn (\r\n\t\t\t<Dialog open={open} onClose={closeDialog}>\r\n                <div className = {classes.dialog}>\r\n                    <Paper elevation = {4}>\r\n                        <TextField \r\n                            onChange = {this.handleKeyChange} \r\n                            label = \"Username\" \r\n                            name = \"username\"\r\n                            className = {classes.input}\r\n                            disabled = {loading}\r\n                        />\r\n                        <br/>\r\n                        <TextField \r\n                            onChange = {this.handleKeyChange} \r\n                            label = \"Date of birth\" \r\n                            name = \"birthDate\"\r\n                            className = {classes.input}\r\n                            disabled = {loading}\r\n                        />\r\n                        <br/>\r\n                        <TextField \r\n                            onChange = {this.handleKeyChange} \r\n                            label = \"Company\" \r\n                            name = \"company\"\r\n                            className = {classes.input}\r\n                            disabled = {loading}\r\n                        />\r\n                        <br/>\r\n                        <TextField \r\n                            onChange = {this.handleKeyChange} \r\n                            label = \"Introduction\" \r\n                            name = \"introduction\"\r\n                            className = {classes.input}\r\n                            disabled = {loading}\r\n                        />\r\n                        <br/>\r\n                        <TextField \r\n                            onChange = {this.handleKeyChange} \r\n                            label = \"Location\" \r\n                            name = \"location\"\r\n                            className = {classes.input}\r\n                            disabled = {loading}\r\n                        />\r\n                        <br/>\r\n                    </Paper>\r\n                </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ProfileEditor)\r\n","import React from 'react'\r\nimport {\r\n\tAvatar,\r\n\tButton\r\n} from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Navbar from '../../components/Navbar'\r\nimport ProfileEditor from '../../components/ProfileEditor'\r\n\r\nconst styles = {\r\n\tbackground: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"500px\",\r\n\t\t\"background-image\": \"url('/assets/images/windlife-background.jpg')\",\r\n\t\t\"background-size\": \"cover\",\r\n\t\t\"background-position\": \"center center\",\r\n\t\topacity: \"0.95\"\r\n\t},\r\n\tbasicinfo: {\r\n\t\tdisplay: \"flex\",\r\n\t\t\"align-items\": \"center\"\r\n\t},\r\n\tavatar: {\r\n\t\t\"background-color\": \"rgb(0, 188, 212)\",\r\n\t\twidth: \"90px\",\r\n\t\theight: \"90px\",\r\n\t\t\"font-size\": \"2rem\"\r\n\t},\r\n\tname: {\r\n\t\t\"margin-left\": \"30px\",\r\n\t\tcolor: \"white\",\r\n\t\t\"font-size\": \"40px\",\r\n\t\t\"border-bottom\": \"6px solid #eae9e9\"\r\n\t},\r\n\tbutton: {\r\n\t\tcolor: \"black\",\r\n\t\t\"margin-right\": \"30px\",\r\n\t\tbackground: \"white\",\r\n\t\theight: \"60px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: \"#e0e0e0\"\r\n\t\t}\r\n\t},\r\n\tcontainer: {\r\n\t\tposition: \"relative\",\r\n\t\ttop: \"-100px\",\r\n\t\tdisplay: \"flex\",\r\n\t\t\"justify-content\": \"space-between\"\r\n\t}\r\n}\r\n\r\nclass Profile extends React.Component{\r\n\tconstructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n        }\r\n    }\r\n\topenDialog = () => {\r\n        this.setState({open: true})\r\n    }\r\n    closeDialog = () => {\r\n        this.setState({open: false})\r\n    }\r\n\trender() {\r\n\t\tconst user = JSON.parse(localStorage.user);\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Navbar/>\r\n\t\t\t\t<div className = {classes.background}></div>\r\n\t\t\t\t\t<div className = {classes.container}>\r\n\t\t\t\t\t\t<div className = {classes.basicinfo}>\r\n\t\t\t\t\t\t\t<Avatar className = {classes.avatar}>\r\n\t\t\t\t\t\t\t\t{user.username[0].toUpperCase()}\r\n\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t<div className = {classes.name}>\r\n\t\t\t\t\t\t\t\t{user.username}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Button className = {classes.button} onClick={this.openDialog}>Edit profile</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ProfileEditor\r\n\t\t\t\t\t\topen = {this.state.open}\r\n\t\t\t\t\t\tcloseDialog = {this.closeDialog}\r\n\t\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Profile);","import React from 'react';\r\nimport { Paper, Typography, CircularProgress } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles' \r\n\r\nimport { connect } from 'react-redux'\r\nimport { verify } from '../../redux/actions/userActions'\r\n\r\nconst styles = {\r\n    paper: {\r\n        padding : \"25px 25px 75px 25px\",\r\n        \"position\": \"relative\",\r\n        \"left\": \"50%\",\r\n        \"margin-top\": \"50px\",\r\n        \"transform\": \"translate(-50%, 0%)\",\r\n\t\t\"display\": \"table\"\r\n    },\r\n    error: {\r\n        color: \"red\",\r\n        \"font-weight\": \"bold\",\r\n\t\t\"margin-bottom\": \"25px\"\r\n    },\r\n    success: {\r\n        color: \"green\",\r\n        \"font-weight\": \"bold\",\r\n\t\t\"margin-bottom\": \"25px\"\r\n    },\r\n\tprogress: {\r\n\t\t\"position\": \"relative\",\r\n        \"left\": \"50%\",\r\n        \"margin-top\": \"200px\",\r\n        \"transform\": \"translate(-50%, 0%)\",\r\n\t}\r\n}\r\nclass Verify extends React.Component{\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        this.props.verify(id)\r\n    }\r\n    render() {\r\n        const { classes, UI: { loading, errors, message: { message } } } = this.props\r\n        return(\r\n            (loading) ? (\r\n                <CircularProgress size={100} className = {classes.progress} />\r\n            ) : (\r\n                (errors.message) ? (\r\n                    <Paper elevation = {6} className = {classes.paper}>\r\n                        <Typography variant = \"h5\" className = {classes.error}>Error</Typography>\r\n                        <Typography variant = \"subtitle1\">{errors.message}</Typography>\r\n                    </Paper>\r\n                ) : (\r\n                    <Paper elevation = {6} className = {classes.paper}>\r\n                        <Typography variant = \"h5\" className = {classes.success}>{message}</Typography>\r\n                        <Typography variant = \"subtitle1\">Now you can login and connect with other people</Typography>\r\n                    </Paper>\r\n                )\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    verify\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps,\r\n)(withStyles(styles)(Verify))","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\r\n    <Route \r\n        {...rest}\r\n        render={(props) => \r\n            authenticated === false ? <Redirect to = \"/login\" /> : <Component {...props}/> \r\n        }\r\n    />\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(AuthRoute)","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Login from './pages/Login/login'\r\nimport Signup from './pages/Signup/signup'\r\nimport Dashboard from './pages/Dashboard/dashboard'\r\nimport Profile from './pages/Profile/profile'\r\nimport Verify from './pages/Verify/verify'\r\nimport AuthRoute from './util/AuthRoute'\r\nimport './index.css'\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { SET_AUTHENTICATED, SET_USER_DATA } from './redux/types';\r\nimport store from './redux/store'\r\n\r\nimport axios from 'axios';\r\n\r\nconst token = localStorage.JWTToken;\r\nif(token) {\r\n  store.dispatch({type: SET_AUTHENTICATED})\r\n  store.dispatch({\r\n    type: SET_USER_DATA,\r\n    payload: JSON.parse(localStorage.user)\r\n  })\r\n  axios.defaults.headers.common['Authorization'] = token;\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store = {store}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path = \"/login\" component = {Login}></Route>\r\n          <Route exact path = \"/signup\" component = {Signup}></Route>\r\n          <Route exact path = \"/verify/:id\" component = {Verify}></Route>\r\n          <AuthRoute exact path = \"/\" component = {Dashboard}></AuthRoute>\r\n          <AuthRoute exact path = \"/profile\" component = {Profile}></AuthRoute>\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}